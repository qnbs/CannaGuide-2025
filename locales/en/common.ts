
export const common = {
  add: 'Add',
  all: 'All',
  apply: 'Apply',
  back: 'Back',
  cancel: 'Cancel',
  close: 'Close',
  confirm: 'Confirm',
  delete: 'Delete',
  details: 'Details',
  downloadAgain: 'Download Again',
  edit: 'Edit',
  export: 'Export',
  exportError: 'Export failed. Please try again.',
  genetics: 'Genetics',
  inspect: 'Inspect',
  name: 'Name',
  next: 'Next',
  noDataToExport: 'No data available to export.',
  notes: 'Notes',
  save: 'Save',
  select: 'Select',
  start: 'Start',
  style: 'Style',
  successfullyExported: 'Successfully exported {count} items as {format}.',
  type: 'Type',
  typeDetails: 'Type Details',
  why: 'Why?',
  days: 'Days',
  description: 'Description',
  actions: 'Actions',
  error: 'Error',
  offlineWarning: 'You are currently offline. Functionality may be limited.',
  installPwa: 'Install App',
  installed: 'Installed',
  installPwaDescription: 'Install this application on your device for quick access and an offline experience.',
  installPwaSuccess: 'App installed successfully!',
  installPwaDismissed: 'Installation dismissed.',
  removeImage: 'Remove image',
  deleteResponse: 'Delete response',
  deleteSetup: 'Delete setup',
  page: 'Page',
  generated: 'Generated',
  for: 'For:',
  moreActions: 'More actions',
  units: {
    cm: 'cm',
    ml: 'ml',
    L: 'L',
    g: 'g',
    ms_cm: 'mS/cm',
    percent: '%',
    days: 'Days',
    weeks: 'weeks',
    watt: 'W',
    h_day: 'h/day',
    kwh: 'kWh',
    ppm: 'ppm',
    g_w: 'g/W',
    celsius: '°C',
    m3_h: 'm³/h',
    price_kwh: '€/kWh',
    ml_l: 'ml/L',
    currency_eur: '€'
  },
  terpenes: {
    "Myrcene": "Myrcene",
    "Caryophyllene": "Caryophyllene",
    "Limonene": "Limonene",
    "Pinene": "Pinene",
    "Linalool": "Linalool",
    "Terpinolene": "Terpinolene",
    "Humulene": "Humulene",
    "Ocimene": "Ocimene",
    "Bisabolol": "Bisabolol",
    "Nerolidol": "Nerolidol"
  },
  aromas: {
    "Sweet": "Sweet",
    "Earthy": "Earthy",
    "Pine": "Pine",
    "Spicy": "Spicy",
    "Skunk": "Skunk",
    "Citrus": "Citrus",
    "Tropical": "Tropical",
    "Fruity": "Fruity",
    "Woody": "Woody",
    "Herbal": "Herbal",
    "Floral": "Floral",
    "Peppery": "Peppery",
    "Diesel": "Diesel",
    "Pungent": "Pungent",
    "Vanilla": "Vanilla",
    "Coffee": "Coffee",
    "Chocolate": "Chocolate",
    "Mint": "Mint",
    "Grape": "Grape",
    "Berry": "Berry",
    "Ammonia": "Ammonia",
    "Chemical": "Chemical",
    "Honey": "Honey",
    "Menthol": "Menthol",
    "Nutty": "Nutty",
    "Anise": "Anise",
    "Bubblegum": "Bubblegum",
    "Butter": "Butter",
    "Cheese": "Cheese",
    "Cherry": "Cherry",
    "Creamy": "Creamy",
    "Grapefruit": "Grapefruit",
    "Lavender": "Lavender",
    "Lemon": "Lemon",
    "Lime": "Lime",
    "Mango": "Mango",
    "Melon": "Melon",
    "Orange": "Orange",
    "Papaya": "Papaya",
    "Peach": "Peach",
    "Pineapple": "Pineapple",
    "Raspberry": "Raspberry",
    "Strawberry": "Strawberry",
    "Apricot": "Apricot",
    "Apple": "Apple",
    "Guava": "Guava",
    "Glue": "Glue",
    "Meaty": "Meaty",
    "Cookie": "Cookie",
    "Hash": "Hash",
    "Incense": "Incense",
    "Licorice": "Licorice",
    "Clean": "Clean",
    "Metallic": "Metallic",
    "Sage": "Sage",
    "Cedar": "Cedar",
    "Eucalyptus": "Eucalyptus",
    "Candy": "Candy"
  }
};

export const nav = {
  strains: 'Strains',
  plants: 'Plants',
  equipment: 'Equipment',
  knowledge: 'Knowledge',
  settings: 'Settings',
  help: 'Help',
};

export const plantStages = {
  SEED: 'Seed',
  GERMINATION: 'Germination',
  SEEDLING: 'Seedling',
  VEGETATIVE: 'Vegetative',
  FLOWERING: 'Flowering',
  HARVEST: 'Harvest',
  DRYING: 'Drying',
  CURING: 'Curing',
  FINISHED: 'Finished',
};

export const problemMessages = {
    overwatering: { message: 'Overwatering detected', solution: 'Water less frequently and ensure the pot has good drainage.' },
    underwatering: { message: 'Underwatering detected', solution: 'Water the plant thoroughly until water runs out the bottom of the pot.' },
    nutrientBurn: { message: 'Nutrient Burn', solution: 'Reduce EC level and flush with pH-neutral water.' },
    nutrientDeficiency: { message: 'Nutrient Deficiency', solution: 'Increase feeding according to schedule and check pH.' },
    phTooLow: { message: 'pH Too Low', solution: 'Adjust water with pH-Up to bring the value into the ideal range.' },
    phTooHigh: { message: 'pH Too High', solution: 'Adjust water with pH-Down to bring the value into the ideal range.' },
    tempTooHigh: { message: 'Temperature Too High', solution: 'Increase exhaust fan speed, provide more air circulation, or dim/raise the light.' },
    tempTooLow: { message: 'Temperature Too Low', solution: 'Use a heating mat or increase room temperature.' },
    humidityTooHigh: { message: 'Humidity Too High', solution: 'Increase exhaust fan speed and use a dehumidifier if necessary.' },
    humidityTooLow: { message: 'Humidity Too Low', solution: 'Use a humidifier or hang wet towels.' },
    vpdTooLow: { message: 'VPD Too Low (Too Humid)', solution: 'Decrease humidity or slightly increase temperature to encourage transpiration.' },
    vpdTooHigh: { message: 'VPD Too High (Too Dry)', solution: 'Increase humidity or slightly decrease temperature to reduce stress.' },
    pest: { message: 'Pest Infestation Detected', solution: 'Isolate plant, treat with neem oil, and introduce beneficial insects.' },
};

export const ai = {
  advisor: 'AI Advisor',
  mentor: 'AI Mentor',
  diagnostics: 'AI Diagnostics',
  getAdvice: 'Request AI Analysis',
  generating: 'Generating response...',
  disclaimer: 'AI-generated content may be inaccurate. Always verify important information.',
  loading: {
    equipment: {
      analyzing: 'Analyzing requirements...',
      custom: 'Configuring for setup: {config}',
      selecting: 'Selecting suitable components...',
      finalizing: 'Finalizing recommendation...'
    },
    diagnostics: {
      receiving: 'Receiving image data...',
      analyzing: 'Analyzing image for anomalies...',
      identifying: 'Identifying potential issues...',
      formulating: 'Formulating diagnosis & solution...'
    },
    mentor: {
      processing: 'Processing query: "{query}"',
      searching: 'Searching knowledge base...',
      compiling: 'Compiling a detailed response...'
    },
    advisor: {
      analyzing: 'Analyzing data for plant in {stage} stage...',
      vitals: 'Checking vitals (pH: {ph}, EC: {ec})...',
      problems: 'Assessing {count} active problems...',
      formulating: 'Formulating a recommendation...'
    },
    growTips: {
        analyzing: 'Analyzing {name} genetics...',
        focusing: 'Focusing on {focus}...',
        consulting: 'Consulting advanced cultivation data...',
        formulating: 'Formulating tips for the {stage} stage...'
    }
  },
  error: {
    parsing: 'Failed to understand the AI\'s response. It might be malformed.',
    apiKey: 'The AI service is not configured correctly (Invalid API Key).',
    api: 'The AI service returned an error. Please try again later.',
    network: 'Could not connect to the AI service. Please check your network connection.',
    unknown: 'An unknown error occurred with the AI service.'
  },
  gemini: {
    equipmentPromptSuffix: "You are a world-class expert in cannabis cultivation equipment. Your goal is to create a perfectly balanced, state-of-the-art grow setup based on the user's request. For each category (tent, light, ventilation, pots, soil, nutrients, extra), provide a specific, highly-regarded product model or type. The price must be a realistic estimate in Euros. The rationale must be concise and sophisticated, explaining *why* this component is the best choice, considering synergies (e.g., 'This LED provides the optimal PPFD for this tent, maximizing yield potential, and its low heat signature works synergistically with the chosen fan to maintain a stable VPD'). Conclude with a 'Pro-Tip' section offering one advanced piece of advice for using this setup.",
    diagnosePrompt: "You are an AI plant pathologist specializing in cannabis, with the expertise of a master grower. Analyze this image. Plant context: {context}. Provide a precise, expert-level diagnosis. Format the response as a JSON object with 'title' and 'content' keys. The 'title' must be the specific problem (e.g., 'Nitrogen Deficiency', 'Light Burn', 'Spider Mites'). The 'content' must be valid Markdown and structured with the following H3 sections: '### Diagnosis' (explaining what you see and why, with a confidence level from 1-100%), '### Immediate Action' (clear, actionable steps), '### Long-Term Solution' (how to fix it permanently), and '### Prevention' (how to avoid it in the future). Be sophisticated and thorough.",
    mentorSystemInstruction: "You are 'CannaGuide Mentor', a world-class horticultural scientist and master grower with a Ph.D. in Plant Science. Your tone is professional, deeply scientific, encouraging, and clear. When a user asks a question, provide a comprehensive, state-of-the-art answer. Structure your response for maximum clarity using Markdown. Begin with a '### Key Takeaway' section (a single, bolded sentence). Follow with '### Detailed Explanation', using bolding for key terms and concepts. If comparing items, use a markdown table. Conclude with an '### Advanced Insight' section offering a sophisticated, expert-level tip. Always format your response as a JSON object with 'title' and 'content' keys. The 'content' must be valid Markdown.",
    advisorQuery: "You are an expert AI grow advisor using the SBAR (Situation, Background, Assessment, Recommendation) framework. Based on the following JSON data for a cannabis plant, provide a concise, expert-level analysis. Plant Data: {data}. Format your response as a JSON object with 'title' and 'content' keys. The 'title' must be a very short summary (max 5 words) of the primary assessment (e.g., 'Nutrient Lockout Risk Detected'). The 'content' must be valid Markdown structured with four H3 sections: '### Situation' (What is the current state?), '### Background' (What key data led to this?), '### Assessment' (What is your expert conclusion?), and '### Recommendation' (A single, clear, primary action for the grower).",
    strainTipsPrompt: "You are a world-class master grower with deep scientific knowledge of cannabis horticulture. Your task is to provide 4 distinct, expert-level pro-tips for cultivating a specific strain based on user-defined parameters. The response must be a JSON object.\n\n**Strain Details:**\n- **Name:** {name}\n- **Type:** {type}\n- **Difficulty:** {difficulty}\n- **Height:** {height}\n- **Flowering Time:** {flowering} weeks\n\n**User Context:**\n- **Grow Focus:** {focus}\n- **Growth Stage of Interest:** {stage}\n- **Grower Experience Level:** {experience}\n\n**Instructions for JSON Output:**\nGenerate a JSON object with four keys: `nutrientTip`, `trainingTip`, `environmentalTip`, and `proTip`. Each key's value must be a string containing a single, actionable tip as a paragraph. The tips must be sophisticated, specific, and directly tailored to the combination of the strain's characteristics and the user's context.\n\n- **nutrientTip:** Focus on feeding strategies. If the focus is 'yield', suggest a specific PK booster schedule. If 'organic', suggest a specific top-dressing amendment.\n- **trainingTip:** Focus on canopy management. If the strain is 'tall' and the stage is 'vegetative', recommend topping or SCROG. If the focus is 'yield', explain how the technique maximizes light exposure.\n- **environmentalTip:** Focus on climate control (VPD, temperature, humidity). If the strain is prone to mold and the stage is 'flowering', suggest specific humidity levels and airflow strategies.\n- **proTip:** Provide a unique, advanced insight that combines multiple factors. For example, how to use a specific environmental stressor during late flower to enhance terpene production for this specific strain."
  }
};
